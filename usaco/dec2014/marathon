import java.io.*;
import java.util.*;

public class marathon {

    public static int[] x;
    public static int[] y;

    public static void main(String[] args) throws Exception {
        BufferedReader f = new BufferedReader(new FileReader("marathon.in"));
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("marathon.out")));
        StringTokenizer st = new StringTokenizer(f.readLine());
        int n = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());

        x = new int[n];
        y = new int[n];

        for (int i = 0; i < n; i++) {
            StringTokenizer st1 = new StringTokenizer(f.readLine());
            x[i] = Integer.parseInt(st1.nextToken());
            y[i] = Integer.parseInt(st1.nextToken());
        }

        int[][] dp = new int[k+1][n];
        for(int i = 0; i < dp.length; i++) {
            Arrays.fill(dp[i], 1 << 30);
        }
        dp[0][0] = 0;
        for(int i = 0; i <= k; i++) { //skipped
            for(int j = 0; j < n; j++) { //all points
                for(int l = j+1; l < n && i + l-j-1 <= k; l++) { //skip
                    int nextI = i + (l-j-1);
                    int nextJ = l;
                    dp[nextI][nextJ] = Math.min(dp[nextI][nextJ], dp[i][j] + distBetween(j, l));
                }
            }
        }
        out.println(dp[k][n-1]);

        f.close();
        out.close();
    }

    public static int distBetween(int i, int j) {
        return dist(x[i], y[i], x[j], y[j]);  
    }

    public static int dist(int x1, int y1, int x2, int y2) {
        int x = x1-x2;
        int y = y1-y2;
        return Math.abs(x) + Math.abs(y);
    }
}
